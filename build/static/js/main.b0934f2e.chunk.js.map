{"version":3,"sources":["components/MenuWarper/index.jsx","components/DashboardWarper/index.jsx","graphql/queris/index.js","graphql/mutations/index.js","pages/DashboardPage/index.jsx","pages/LandingPage/index.jsx","pages/MenuPage/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["MenuComp","guilds","className","src","alt","included","map","guild","Image","id","icon","thumbnail","name","to","excluded","href","MenuNavbar","Navbar","expand","bg","variant","Brand","width","height","GuildConfig","history","guildId","user","config","roles","channels","updatePrefix","updateRole","updateMemberLog","defaultRoleId","defaultRole","memberLogChannelId","memberLogChannel","initialValues","prefix","onSubmit","props","handleSubmit","placeholder","onChange","handleChange","defaultValue","type","colorScheme","children","htmlFor","calssName","role","selected","value","console","log","channel","GuildWelcome","menuPageQuery","gql","dashboardPageQuery","updateGuildPrefixMutation","updateDefaultRoleMutation","updateMemberLogChannelMutation","DashboardPage","match","useQuery","variables","params","loading","error","data","useMutation","updateDefaultRole","updateMemberLogChannel","updateGuildPrefixParent","a","message","updateGuildRoleParent","roleId","updateMemberLogParent","channelId","response","getUser","getGuildConfig","getGuildRoles","getGuildChannel","LandingPage","data-toggle","data-target","aria-controls","aria-expanded","aria-label","onClick","window","location","MenuPage","getMutualGuilds","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","link","createHttpLink","uri","credentials","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","StrictMode","resetCSS","document","getElementById"],"mappings":"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","file":"static/js/main.b0934f2e.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\n/* eslint-disable-next-line react-hooks/exhaustive-deps */\r\nimport React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getUserDetails, getGuilds } from \"../../utils/api\"\r\nimport { Col, Container, Row, Navbar, Form, Nav, Button, FormControl, Image } from 'react-bootstrap';\r\n\r\n\r\n\r\nexport function MenuComp({\r\n    guilds,\r\n}) {\r\n    return (\r\n        <section>\r\n\r\n            <section className=\"title-container mt-3 hvr-buzz\">\r\n                <img src=\"logo.png\" className=\"w-75  App-logo py-2 rounded-circle\" alt=\"logo\" />\r\n            </section>\r\n            <section className=\"mt-3 mb-3 border rounded btn btn-block hvr-fade\">\r\n                <h1 className=\"GuildsWord\">Guilds</h1>\r\n            </section>\r\n            <section className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    {guilds.included.map(guild => (\r\n\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"guild-Animation mt-3\">\r\n                                <div className=\" guild-container\">\r\n                                    <Image src={`https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png?size=1024`} className=\"App-logo w-100 rounded-circle hvr-box-shadow-inset guild-img\" thumbnail />\r\n                                    <h2>{guild.name}</h2>\r\n                                    <div>\r\n                                        <Link to={`/dashboard/${guild.id}`} className=\"btn primary-color guild-bottom\">  <h2 className=\"guild-link\">Dashboard</h2></Link>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    ))}\r\n                    {guilds.excluded.map(guild => (\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"guild-Animation mt-3\">\r\n                                <div className=\" guild-container\">\r\n                                    <Image src={`https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png?size=1024`} className=\"App-logo w-100 rounded-circle hvr-box-shadow-inset guild-img\" thumbnail />\r\n                                    <div>\r\n                                        <a href={`https://discord.com/api/oauth2/authorize?client_id=825035795650969600&permissions=8&scope=bot`} className=\"btn primary-color guild-bottom\">\r\n                                            <h2 className=\"guild-link\">Setup Bot</h2>\r\n                                        </a>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </section>\r\n\r\n\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\nexport function MenuNavbar({\r\n    guilds,\r\n}) {\r\n    return (\r\n        <section className=\"mb-5 text-light\">\r\n            <Navbar className=\" text-center\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"/\">  <img src=\"logo.png\" width=\"30px\" height=\"30px\" className=\" App-logo rounded-circle\" alt=\"logo\" />  Grondle </Navbar.Brand>\r\n\r\n            </Navbar>\r\n        </section>\r\n    );\r\n}\r\n\r\n\r\nexport function MenuFooter({\r\n    guilds,\r\n}) {\r\n    return (\r\n        <footer className=\"py-5 bg-blue\">\r\n            <Container>\r\n                <h1>Menu Footer </h1>\r\n\r\n\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *                   {/* <Card style={{ width: '16rem' }}>\r\n                                <Card.Img variant=\"top\" className=\" w-50 rounded-circle \"  src={`https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png`} />\r\n                                {/* <Card.ImgOverlay> }\r\n                                <Card.Body>\r\n                                    <Card.Title>{guild.name}</Card.Title>\r\n                                    {/* <Card.Text>\r\n                                        Some quick example text to build on the card title and make up the bulk of\r\n                                        the card's content.\r\n                                    </Card.Text> }\r\n                                </Card.Body>\r\n                                <Card.Body>\r\n                                    <Link to={`/dashboard/${guild.id}`} className=\"btn btn-outline-success btn-block\">DashBoard</Link>\r\n                                </Card.Body> {/* card footer}\r\n                                {/* </Card.ImgOverlay> }\r\n                            </Card> }\r\n\r\n\r\n        <section className=\"mainSection\">\r\n\r\n            <section id=\"sidebar\" className=\"float-left ml-2 rounded text-center\">\r\n\r\n            </section> {/* guilds Section }\r\n            <section id=\"main-dashboard-content\">\r\n            <section id=\"grid-container\">\r\n            <section className=\"grid-item one py-5 bg-light\">\r\n            </section>\r\n            <section className=\"grid-item two py-5 bg-dark\">\r\n            </section>\r\n            <section className=\"grid-item three py-5 bg-dark\">\r\n            </section>\r\n            <section className=\"grid-item four py-5 bg-dark\">\r\n            </section>\r\n            </section>\r\n            </section>\r\n        </section> // main Section\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Container>\r\n                <Row>\r\n                    {guilds.map(guild => (\r\n                        <Col  className=\"guild-Animation\">\r\n                            <div className=\" guild-container\">\r\n                                    <Image src={`https://cdn.discordapp.com/icons/${guild.id}/${guild.icon}.png?size=1024`} className=\"w-50 guild-img\" thumbnail />\r\n                                   <div>\r\n\r\n                                    <Link to={`/dashboard/${guild.id}`} className=\"btn primary-color guild-bottom\">  <h2 className=\"guild-link\">Guild Config</h2></Link>\r\n\r\n\r\n\r\n                                </div>\r\n                            </div>\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </Container>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n */","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\n/* eslint-disable-next-line react-hooks/exhaustive-deps */\r\nimport React from \"react\"\r\n\r\nimport { Formik } from \"formik\"\r\nimport { getUserDetails, updateGuildPrefix } from \"../../utils/api\"\r\nimport { InputGroup, Container, Row, Col } from \"react-bootstrap\"\r\nimport {\r\n    Button,\r\n    Input,\r\n    Select,\r\n    FormLabel,\r\n} from \"@chakra-ui/react\"\r\n\r\nexport function GuildConfig({\r\n    history,\r\n    guildId,\r\n    user,\r\n    config,\r\n    roles,\r\n    channels,\r\n    updatePrefix,\r\n    updateRole,\r\n    updateMemberLog\r\n\r\n}) {\r\n    const defaultRoleId = config.defaultRole ? config.defaultRole : \"\"\r\n    const memberLogChannelId = config.memberLogChannel ? config.memberLogChannel : \"\"\r\n\r\n    // console.log(roles)\r\n    return (\r\n        <section className=\"py-5\">\r\n            <section id=\"main-dashboard-content\">\r\n                <section id=\"grid-container\">\r\n\r\n                    <section className=\"grid-item one py-5 bg-light\">\r\n                        <div className='prefix-div rounded text-center'>\r\n                            <Formik initialValues={{\r\n                                prefix: config.prefix\r\n                            }}\r\n                                className=\"align-items-center justify-content-sm-center\"\r\n                                onSubmit={({ prefix }) => {\r\n                                    updatePrefix(prefix)\r\n                                }}>\r\n                                {\r\n                                    (props) => (\r\n                                        <form onSubmit={props.handleSubmit} >\r\n                                            <FormLabel>Prefix</FormLabel>\r\n                                            <Input placeholder=\"input your prefix\" className=\"mr-1 btn btn-outline-success btn-block mb-2 text-left rounded-right\" name=\"prefix\" onChange={props.handleChange} defaultValue={config.prefix} />\r\n\r\n                                            <Button type=\"submit\" className=\"main-btn w-25 rounded hvr-round-corners hvr-bob\" colorScheme=\"cyan\" children=\"update Prefix\"> Save </Button>\r\n                                        </form>\r\n                                    )\r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                        <div className=\"prefix-div rounded text-center\">\r\n                            <Formik\r\n                                initialValues={{\r\n                                    defaultRole: defaultRoleId\r\n                                }}\r\n                                className=\"align-items-center justify-content-sm-center\"\r\n                                onSubmit={({ defaultRole }) => {\r\n                                    updateRole(defaultRole)\r\n                                    // console.log(defaultRole)\r\n                                }}>\r\n                                {\r\n                                    (props) => (\r\n                                        <form onSubmit={props.handleSubmit} >\r\n\r\n                                             <label htmlFor=\"AutoRole\" calssName=\"text-center\" > Auto Role </label>\r\n                                            <Select name=\"defaultRole\" id=\"AutoRole\" className=\"btn-block selectRole mb-2\" onChange={props.handleChange}>\r\n                                                {roles.map((role) => (\r\n                                                    <option selected= {role.id === defaultRoleId} value={role.id}  >{role.name}</option>\r\n                                                ))}\r\n                                            </Select>\r\n                                            <Button type=\"submit\" className=\"main-btn w-25 rounded hvr-round-corners hvr-bob\" colorScheme=\"cyan\" children=\"update Role\"> Save </Button>\r\n                                        </form>\r\n                                    )\r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                    </section> {/*  1 */}\r\n                    <section className=\"grid-item two py-5 bg-dark\">\r\n                    <div className=\"prefix-div rounded text-center\">\r\n                            <Formik\r\n                                initialValues={{\r\n                                    memberLogChannel: memberLogChannelId\r\n                                }}\r\n                                className=\"align-items-center justify-content-sm-center\"\r\n                                onSubmit={({ memberLogChannel }) => {\r\n                                    updateMemberLog(memberLogChannel)\r\n                                    console.log(memberLogChannel)\r\n                                }}>\r\n                                {\r\n                                    (props) => (\r\n                                        <form onSubmit={props.handleSubmit} >\r\n                                             <label htmlFor=\"MemberLogChannel\" calssName=\"text-center\" > MemberLog Channel </label>\r\n                                            <Select name=\"MemberLogChannel\" id=\"MemberLogChannel\" className=\"btn-block selectRole mb-2\" onChange={props.handleChange}>\r\n                                                {channels.map((channel) => (\r\n                                                    <option selected= {channel.id === memberLogChannelId} value={channel.id}>{channel.name}</option>\r\n                                                ))}\r\n                                            </Select>\r\n                                            <Button type=\"submit\" className=\"main-btn w-25 rounded hvr-round-corners hvr-bob\" colorScheme=\"cyan\" children=\"update Role\"> Save </Button>\r\n                                        </form>\r\n                                    )\r\n                                }\r\n                            </Formik>\r\n                        </div>\r\n                    </section> {/*  2 */}\r\n                </section> {/* Body Section  */}\r\n            </section> {/**main-dashboard-content */}\r\n        </section >\r\n    );\r\n}\r\n\r\n\r\n\r\nexport function GuildWelcome({\r\n    guilds,\r\n\r\n}) {\r\n\r\n\r\n\r\n    return (\r\n        <section>\r\n\r\n            <h1>hello from Welcome</h1>\r\n        </section>\r\n    );\r\n}\r\n\r\n","import { gql } from \"@apollo/client\"\r\n\r\n\r\n\r\nexport const menuPageQuery = gql`\r\nquery getMenuPageQuery {\r\n    getUser {\r\n        discordId\r\n        discordTag\r\n        avatar\r\n      }\r\n      getMutualGuilds {\r\n        included {\r\n          name\r\n          id\r\n          icon\r\n        }\r\n        excluded {\r\n          name\r\n          id\r\n          icon\r\n        }\r\n      }\r\n}\r\n`;\r\n\r\nexport const dashboardPageQuery = gql`\r\nquery getDashboardPageQuery($guildId: String!) {\r\n    getUser {\r\n        discordId\r\n        discordTag\r\n        avatar\r\n      }\r\n      getMutualGuilds {\r\n        included {\r\n          name\r\n          id\r\n          icon\r\n        }\r\n        excluded {\r\n          name\r\n          id\r\n          icon\r\n        }\r\n      }\r\n      getGuildConfig(guildId: $guildId) {\r\n        guildId\r\n        prefix\r\n        defaultRole\r\n        memberLogChannel\r\n        logChannel\r\n        bumpChannelServers\r\n        bumpChannelBots\r\n        bumpServerDescription\r\n        bumpServerInviteurl\r\n      }\r\n      getGuildRoles (guildId: $guildId){\r\n        id\r\n        name\r\n      }\r\n      getGuildChannel (guildId: $guildId){\r\n        id\r\n        name\r\n      }\r\n}\r\n`;","import { gql } from \"@apollo/client\"\r\n\r\n\r\nexport const updateGuildPrefixMutation = gql`\r\nmutation UpdateGuildPrefix($guildId: String!, $prefix: String){\r\nupdateGuildPrefix(guildId: $guildId , prefix: $prefix){\r\n    prefix\r\n    guildId\r\n    }\r\n}\r\n`;\r\nexport const updateDefaultRoleMutation = gql`\r\nmutation updateDefaultRole($guildId: String!, $defaultRole: String){\r\n    updateDefaultRole(guildId: $guildId , defaultRole: $defaultRole){\r\n    defaultRole\r\n    guildId\r\n    }\r\n}\r\n`;\r\nexport const updateMemberLogChannelMutation = gql`\r\nmutation updateMemberLogChannel($guildId: String!, $memberLogChannel: String){\r\n    UpdateMemberLogChannel(guildId: $guildId , memberLogChannel: $memberLogChannel){\r\n        memberLogChannel\r\n        guildId\r\n    }\r\n}\r\n`;\r\n// export const updateModLogChannelMutation = gql`\r\n// mutation UpdateMemberLogChannel($guildId: String!, $memberLogChannel: String){\r\n//     UpdateModLogChannel(guildId: $guildId , memberLogChannel: $memberLogChannel){\r\n//         memberLogChannel\r\n//         guildId\r\n//     }\r\n// }\r\n// `;","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n\r\nimport React from \"react\"\r\nimport { Image } from 'react-bootstrap';\r\nimport { GuildConfig, GuildWelcome } from \"../../components\"\r\nimport {\r\n    useQuery,\r\n    useMutation,\r\n} from \"@apollo/client\"\r\n\r\nimport { dashboardPageQuery } from \"../../graphql/queris\"\r\n\r\nimport {\r\n    updateGuildPrefixMutation,\r\n    updateDefaultRoleMutation,\r\n    updateMemberLogChannelMutation,\r\n} from \"../../graphql/mutations\"\r\nexport function DashboardPage({\r\n    history,\r\n    match\r\n}) {\r\n    const { loading, error, data } = useQuery(dashboardPageQuery, { variables: { guildId: match.params.id } })\r\n    const [updatePrefix] = useMutation(updateGuildPrefixMutation)\r\n    const [updateDefaultRole] = useMutation(updateDefaultRoleMutation)\r\n    const [updateMemberLogChannel] = useMutation(updateMemberLogChannelMutation)\r\n\r\n\r\n\r\n    const updateGuildPrefixParent = async (prefix) => {\r\n        try {const response = await updatePrefix({\r\n                variables: {\r\n                    guildId: match.params.id,\r\n                    prefix\r\n                }});} catch (e) { console.error(e.message)}\r\n    }\r\n\r\n    const updateGuildRoleParent = async (roleId) => {\r\n        try {\r\n            const response = await updateDefaultRole({\r\n                variables: {\r\n                    guildId: match.params.id,\r\n                    defaultRole: roleId}});  } catch (e) {console.error(e.message)}\r\n    }\r\n    const updateMemberLogParent = async (channelId) => {\r\n        try {\r\n            const response = await updateMemberLogChannel({\r\n                variables: {\r\n                    guildId: match.params.id,\r\n                    memberLogChannel : channelId,\r\n                }\r\n            });\r\n            console.log(response)\r\n        } catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n    if (!loading && !error) {\r\n        const {\r\n            getUser,\r\n            getGuildConfig,\r\n            getGuildRoles,\r\n            getGuildChannel,\r\n        } = data\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\">DashboardPage </h1>\r\n                <GuildConfig\r\n                    user={getUser}\r\n                    config={getGuildConfig}\r\n                    roles={getGuildRoles}\r\n                    channels={getGuildChannel}\r\n                    updateMemberLog = {updateMemberLogParent }\r\n                    updatePrefix={updateGuildPrefixParent}\r\n                    updateRole={updateGuildRoleParent}\r\n                />\r\n                <GuildWelcome />\r\n\r\n            </div>\r\n\r\n        );\r\n    } return <div className=\"text-center align-content-center justify-content-center\"> <Image src=\"https://cdn.discordapp.com/icons/801586699108745227/9d7b1008a291fff12aba70d3a5b14ed4.png\" className=\"App-logo w-50  rounded-circle hvr-box-shadow-inset guild-img\" thumbnail /></div>\r\n}\r\n\r\n\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n\r\nimport React from \"react\"\r\nimport { Button } from \"@chakra-ui/react\"\r\n// import { test } from \"../../utils/jquery\"\r\n\r\nexport function LandingPage(props) {\r\n    const login = () => window.location.href = \"http://localhost:3002/api/auth/discord\"\r\n    return(\r\n        <div className=\"App\">\r\n\r\n<nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <a className=\"navbar-brand\" href=\"#\">Navbar</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Link</a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link\" href=\"#\">Anoher Link</a>\r\n      </li>\r\n   \r\n    </ul>\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n  <Button className= \"btn btn-success btn-outline-success my-2 my-sm-0 hvr-hang hvr-round-corners hvr-radial-in\"\r\n        onClick = {login} colorScheme=\"cyan\" >Login</Button>\r\n    </form>\r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n\r\n\r\n       \r\n      </div>\r\n    )\r\n}\r\n\r\n/* <Button classNameName= \"btn btn-success btn-outline-success my-2 my-sm-0 hvr-hang hvr-round-corners hvr-radial-in\"\r\nonClick = {login} colorScheme=\"cyan\" >Login</Button>*/","/* eslint-disable no-unused-vars */\r\n/* eslint-disable-next-line react-hooks/exhaustive-deps */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from \"react\"\r\nimport { MenuComp, MenuNavbar, MenuFooter } from \"../../components\"\r\nimport { getUserDetails, getGuilds } from \"../../utils/api\"\r\nimport {  Image } from 'react-bootstrap';\r\nimport { useQuery } from \"@apollo/client\"\r\nimport { menuPageQuery } from \"../../graphql/queris/index\"\r\n\r\nexport function MenuPage({\r\n    history,\r\n}) {\r\n\r\n    console.log(error)\r\n    const { loading , error , data } = useQuery(menuPageQuery)\r\nif (!loading && !error){\r\n    const { getMutualGuilds } = data\r\n    console.log(getMutualGuilds)\r\n    return (\r\n        <div>\r\n <MenuNavbar />\r\n<MenuComp guilds={ getMutualGuilds }  />\r\n<h1>menue</h1>\r\n {/* <MenuHeader /> */}\r\n     {/* <MenuFooter /> */}\r\n        </div>\r\n    )\r\n} return <div className=\"text-center align-content-center justify-content-center\"> <Image src=\"https://cdn.discordapp.com/icons/801586699108745227/9d7b1008a291fff12aba70d3a5b14ed4.png\" className=\"App-logo w-50  rounded-circle hvr-box-shadow-inset guild-img\" thumbnail /></div>\r\n\r\n\r\n\r\n\r\n\r\n    // return !loading && (\r\n    //     <div>\r\n    //        \r\n    //         \r\n    //        \r\n    //     </div>\r\n\r\n    // );\r\n}","import './App.css';\nimport { Switch , Route } from \"react-router-dom\"\nimport {LandingPage  , DashboardPage , MenuPage } from \"./pages\"\n\nfunction App() {\n  return (\n  <Switch>\n    {/* <LandingPage /> */}\n<Route path=\"/\" exact= {true} component = { LandingPage }/>\n<Route path=\"/menu\" exact= {true} component = { MenuPage }/>\n{/* <Route path=\"/dashboard\" exact= {true} component = { DashboardPage }/> */}\n\n{/* guild Dashboard link */}\n<Route path=\"/dashboard/:id\" exact= {true} component = { DashboardPage }/>\n  </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider} from \"@chakra-ui/react\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport { ApolloClient, createHttpLink, InMemoryCache, ApolloProvider } from \"@apollo/client\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport \"bootstrap/dist/js/bootstrap.bundle\"\nimport \"hover.css/css/hover-min.css\"\nimport \"jquery/dist/jquery.slim\"\nimport \"@fortawesome/fontawesome-free/css/all.min.css\"\nimport './index.css';\nimport './MyStyle.css';\n\nconst link = createHttpLink({\n  uri: 'http://localhost:3002/graphql',\n  credentials: 'include'\n})\nconst client = new ApolloClient({\n  link,\n  cache: new InMemoryCache(),\n})\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider resetCSS={true}>\n      <Router>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </Router>\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}